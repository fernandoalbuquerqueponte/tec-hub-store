// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  name       String
  deliveries Delivery[]
}

model Store {
  id         String     @id @default(uuid())
  name       String
  products   Product[]
  deliveries Delivery[]
}

model Category {
  id         String     @id @default(uuid())
  name       String
  slug       String
  products   Product[]
  deliveries Delivery[]
}

model Product {
  id                 String     @id @default(uuid())
  name               String
  description        String
  imageUrl           String
  basePrice          Decimal    @db.Decimal(10, 2)
  discountPercentage Int
  categoryId         String
  category           Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  slug               String
  storeId            String
  store              Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  deliveries         Delivery[]
}

model Delivery {
  id         String   @id @default(uuid())
  storeId    String
  store      Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  productId  String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  date       DateTime
}
